<project name="EclipseTelemetry8" basedir="." default="main">
	<!-- 
		
	========================================================================
	========================================================================
	To build JAVA_HOME need to be set to the JDK home (Change in OS setting) 
	========================================================================
	========================================================================
	
	
	Ant file to build the application create all the structure we need	
	
	
	
	-->
	<property name="src.dir"     value="src"/>

	<property name="build.dir"   value="build"/>
	<property name="images.dir" value="images"/>
	<property name="jar.dir"     value="${build.dir}/jar"/>
	<property name="lib.dir"     value="lib"/>

	<property name="main-class"  value="eclipse.controller.app.EclipseTelemetry"/>

	<tstamp>
		<format property="TODAY" pattern="yyyy.MM.dd-HH.mm.ss" />
	</tstamp>

	<!-- create a property containing all .jar files, prefix lib/, and seperated with a space -->
	<pathconvert property="lib.jar" pathsep=" ">
		<mapper>
			<chainedmapper>

				<!-- remove absolute path -->
				<flattenmapper />

				<!-- add lib/ prefix -->
				<globmapper from="*" to="lib/*" />
			</chainedmapper>
		</mapper>

		<path>
			<!-- lib.home contains all jar files, in several subdirectories -->
			<fileset dir="${lib.dir}">
				<include name="**/*.jar" />
			</fileset>
		</path>
	</pathconvert>

	<path id="classpath">
		<fileset dir="${lib.dir}" includes="**/*.jar"/>
	</path>

	<target name="clean">
		<delete dir="${build.dir}"/>
		<delete dir="${jar.dir}"/>
	</target>

	<target name="compile">
		<mkdir dir="${classes.dir}"/>
		<javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath"/>
	</target>

	<target name="jar" depends="compile">
		<mkdir dir="${jar.dir}"/>
		

		<mkdir dir="${jar.dir}/images"/>
		<copy todir="${jar.dir}/images">
			<fileset dir="${images.dir}">
				<include name="*.png"/>
			</fileset>
		</copy>

		<!-- Copy the libs -->
		<mkdir dir="${jar.dir}/lib"/>
		<copy todir="${jar.dir}/lib/">
			<fileset dir="${lib.dir}"/>
		</copy>

		<!-- Copy other support files -->
		<copy todir="${jar.dir}">
			<fileset dir="${basedir}">
				<include name="*.xml"/>
				<include name="*.xsd"/>
				<include name="*.png"/>
				<include name="*.properties"/>
				<include name="*.configuration"/>
				<exclude name="build.xml"/>
			</fileset>
		</copy>
		
		<!-- Copy SwingAppFramework support files -->
		<copy todir="${classes.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.properties"/>
			</fileset>
		</copy>
		
		<!-- Create logs directory -->
		<mkdir dir="${jar.dir}/log"/>

		<jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
			<manifest>
				<attribute name="Main-Class" value="${main-class}"/>
				<attribute name="Class-Path" value="${lib.jar}" />
			</manifest>
		</jar>

	</target>
	
	<target name="zip">
		<zip destfile="${build.dir}/Telemetry_v${TODAY}.zip" basedir="${jar.dir}" excludes="" />
	</target>

	<target name="run" depends="jar">
		<java fork="true" classname="${main-class}"/>
	</target>

	<target name="clean-build" depends="clean,jar"/>

	<target name="main" depends="clean,jar,zip"/>

</project>